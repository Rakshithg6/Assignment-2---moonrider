name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-crud-example:${{ github.ref_name }}
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Clean Maven cache
        run: rm -rf ~/.m2/repository

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: docker push $IMAGE_NAME

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Prepare kubeconfig from secret
        run: |
          if [ -z "${{ secrets.KUBE_CONFIG_DATA }}" ]; then
            echo "KUBE_CONFIG_DATA is not set! Please check your GitHub Secrets."
            exit 1
          fi
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          echo "Kubeconfig has been set at \$HOME/.kube/config"

      - name: Deploy to Kubernetes
        run: |
          echo "Checking current kubectl context..."
          kubectl config get-contexts
          echo "Applying Kubernetes manifests..."
          for file in k8s/*.yaml; do
            echo "Applying $file"
            kubectl apply --validate=false -f "$file"
          done

      - name: Post-deployment health check
        run: |
          echo "Waiting for pods to initialize..."
          sleep 30
          kubectl get pods -A

      - name: Cleanup kubeconfig
        if: always()
        run: rm -f $HOME/.kube/config
